<?xml version="1.0" encoding="UTF-8" ?>
<dt-api library="ColReorder">
	<name>colReorder.order()</name>
	<summary>Get / set column order</summary>
	<since>1.2.0</since>

	<type type="function">
		<signature>colReorder.order()</signature>
		<description>
			Get the current column order.
		</description>
		<returns type="array">
			Returns an array of column indexes. The column index given is the original column index, with its new position defined by the location in the returned array.
		</returns>
	</type>

	<type type="function">
		<signature>colReorder.order( order )</signature>
		<description>
			Set the column order.
		</description>
		<parameter name="order" type="array">
			Array of column indexes that define where the columns should be placed after the reorder. Please note that the column indexes in the array are _not_ the original column index, but rather than _current_ column index. i.e. `0` will always refer to the first column in the table, regardless of the table ordering.

			Feedback is welcome on this (and all) APIs - if there is demand to add a method that uses the original column indexes, please let me know.
		</parameter>
		<returns type="DataTable.Api">
			DataTables API instance for chaining
		</returns>
	</type>

	<description>
		This method provides the ability to get the current column order of a DataTable and also to set a new order.

		The reorder triggered by this method is immediate and there is no requirement to redraw the table.
	</description>

	<example title="Reverse the order of the columns in the table on a button click"><![CDATA[

var table = $('#example').DataTable( {
	colReorder: true
} );

$('#reverse').click( function (e) {
	table.colReorder.order( [ 5, 4, 3, 2, 1, 0 ] );
} );

]]></example>

</dt-api>