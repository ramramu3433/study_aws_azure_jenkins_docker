{"version":3,"sources":["../pluginHost/interfaces/iStorageProvider.ts"],"names":[],"mappings":"AAAA;;4DAE4D;AAC5D,YAAY,CAAC","file":"interfaces/iStorageProvider.js","sourcesContent":["/*---------------------------------------------------------\r\n * Copyright (C) Microsoft Corporation. All rights reserved.\r\n *--------------------------------------------------------*/\r\n\"use strict\";\r\nimport {Promise} from \"q\";\r\nimport {FileDialogMode, FileDialogOptions} from \"../common/fileDialogOptions\";\r\nimport {FileOptions, FilePersistence} from \"../common/fileOptions\";\r\nimport {SeekOrigin} from \"../common/seekOrigin\";\r\n\r\nexport interface IStorageProvider {\r\n    close(streamId: string): void;\r\n\r\n    fileDialog(mode: FileDialogMode, dialogOptions: FileDialogOptions, fileOptions: FileOptions): Promise<string>;\r\n\r\n    getFileList(path?: string, persistence?: FilePersistence, index?: number, count?: number): Promise<string[]>;\r\n\r\n    openFile(path?: string, options?: FileOptions): Promise<string>;\r\n\r\n    seek(streamId: string, offset: number, origin: SeekOrigin): Promise<number>;\r\n\r\n    readBinary(streamId: string, count: number): Promise<any>;\r\n\r\n    readText(streamId: string, count: number): Promise<any>;\r\n\r\n    writeBinary(streamId: string, data: any, offset: number, count: number): Promise<void>;\r\n\r\n    writeText(streamId: string, data: any, offset: number, count: number): Promise<void>;\r\n}"],"sourceRoot":"/source/"}