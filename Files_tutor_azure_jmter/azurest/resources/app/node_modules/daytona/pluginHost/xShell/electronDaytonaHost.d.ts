import { IFileProvider } from "../interfaces/iFileProvider";
import { ILogProvider } from "../interfaces/iLogProvider";
import { IResourcesProvider } from "../interfaces/iResourcesProvider";
import { IThemeProvider } from "../interfaces/iThemeProvider";
import { IStorageProvider } from "../interfaces/iStorageProvider";
import DaytonaHost = require('../daytonaHost');
export declare class ElectronHost extends DaytonaHost.DaytonaHost {
    constructor(parent: HTMLElement, manifestFile: string, themeDirectory: string, parameters?: {
        [name: string]: string;
    });
    close(): void;
    pluginToPageCoords(pluginX: number, pluginY: number): {
        x: number;
        y: number;
    };
    updateTheme(newTheme: string): void;
    protected getFileProvider(): IFileProvider;
    protected getLogProvider(): ILogProvider;
    protected getResourcesProvider(): IResourcesProvider;
    protected getThemeProvider(): IThemeProvider;
    protected getStorageProvider(): IStorageProvider;
}
