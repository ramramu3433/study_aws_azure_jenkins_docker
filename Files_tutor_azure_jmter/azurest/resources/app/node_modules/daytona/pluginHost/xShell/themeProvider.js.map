{"version":3,"sources":["../pluginHost/xShell/themeProvider.ts"],"names":[],"mappings":"AAAA;;4DAE4D;AAC3D,YAAY,CAAC;;;;;;;;;;;;AAEd,2DAAwD;AAGxD,yCAAmD;AAEnD,2BAA6B;AAE7B;IAAmC,iCAAW;IAI1C,uBAAoB,YAA2B,EAAE,cAAsB,EAAU,YAAqB;QAAtG,YACI,iBAAO,SAMV;QAPmB,kBAAY,GAAZ,YAAY,CAAe;QAAkC,kBAAY,GAAZ,YAAY,CAAS;QAElG,EAAE,CAAA,CAAC,CAAC,cAAc,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACvD,CAAC;QAED,KAAI,CAAC,cAAc,GAAG,cAAc,GAAG,GAAG,CAAC;;IAC/C,CAAC;IAEM,oCAAY,GAAnB;QACI,IAAI,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,EAAC,IAAI,EAAE,OAAO,CAAC,EAAE,YAAY,CAAC,CAAC;QACzF,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;IAC5D,CAAC;IAEM,mCAAW,GAAlB;QACI,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACtD,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;QACrD,CAAC;QAED,IAAI,oBAAoB,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;QAC7E,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,UAAC,QAAQ;YACzE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACZ,MAAM,CAAC,EAAE,CAAC;YACd,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,mCAAW,GAAlB,UAAmB,QAAgB;QAC/B,EAAE,CAAA,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACpC,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;QACjD,CAAC;QAED,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,IAAI,+BAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;IACrE,CAAC;IACL,oBAAC;AAAD,CAzCA,AAyCC,CAzCkC,mBAAW,GAyC7C;AAzCY,sCAAa","file":"xShell/themeProvider.js","sourcesContent":["/*---------------------------------------------------------\r\n * Copyright (C) Microsoft Corporation. All rights reserved.\r\n *--------------------------------------------------------*/\r\n \"use strict\";\r\nimport {ThemeMap} from \"../common/themeMap\";\r\nimport {ThemeEventArgs} from \"../common/themeEventArgs\";\r\nimport {IThemeProvider} from \"../interfaces/iThemeProvider\";\r\nimport {IFileProvider} from \"../interfaces/iFileProvider\";\r\nimport {Event, EventTarget} from \"../common/event\";\r\nimport { Promise } from \"q\";\r\nimport * as Path from \"path\";\r\n\r\nexport class ThemeProvider extends EventTarget implements IThemeProvider {\r\n\r\n    private themeDirectory: string;\r\n\r\n    constructor(private fileProvider: IFileProvider, themeDirectory: string, private currentTheme?: string) {\r\n        super();\r\n        if(!themeDirectory || themeDirectory.length === 0) {\r\n            throw new Error(\"Theme Directory cannot be empty\");\r\n        }\r\n        \r\n        this.themeDirectory = themeDirectory + '/';\r\n    }\r\n\r\n    public getPluginCss(): Promise<string> {\r\n        let pluginCssPath = Path.join(Path.resolve(__dirname, \"..\",\"..\", \"theme\"), \"plugin.css\");\r\n        return this.fileProvider.getFileContents(pluginCssPath);\r\n    }\r\n\r\n    public getThemeMap(): Promise<ThemeMap> {\r\n        if(!this.currentTheme || this.currentTheme.length === 0) {\r\n            throw new Error(\"Current theme cannot be empty\");    \r\n        }\r\n        \r\n        var currentThemeFilePath = this.themeDirectory + this.currentTheme + '.json';\r\n        return this.fileProvider.getFileContents(currentThemeFilePath).then((contents) => {\r\n            if (!contents) {\r\n                return \"\";\r\n            }\r\n\r\n            return JSON.parse(contents);\r\n        });\r\n    }\r\n\r\n    public updateTheme(newTheme: string): void {\r\n        if(!newTheme || newTheme.length === 0) {\r\n            throw new Error(\"New Theme cannot be empty\");\r\n        }\r\n        \r\n        this.currentTheme = newTheme;\r\n        this.dispatchEvent('themechanged', new ThemeEventArgs(newTheme));\r\n    }\r\n}"],"sourceRoot":"/source/"}