import { Event, EventTarget } from "../common/event";
import { Port, PortMessageEventArgs } from "./communication";
export declare class PortMarshaler extends EventTarget {
    private port;
    private instanceInitialized;
    constructor();
    initialize(newPort: Port): void;
    onMessage(source: Port, eventArgs: PortMessageEventArgs): void;
    onConnected(source: Port, eventArgs: Event): void;
    messageReceived(message: string): any;
    initializeMarshaler(): void;
    postMessage(message: string): void;
    closePort(): void;
    dispose(): void;
}
export declare class JsonPortMarshaler extends PortMarshaler {
    constructor(objDefinition?: any);
    onMessage(source: Port, eventArgs: PortMessageEventArgs): void;
    messageReceived(message: string): any;
    fireEvent(eventName: string, eventArgs: any): void;
}
export declare class SynchronousJsonPortMarshaler extends JsonPortMarshaler {
    private connectFired;
    private delayControlReadyToken;
    constructor(control: EventTarget);
    initializeState(): void;
}
